<?php

namespace App\Models;

use Dyrynda\Database\Support\GeneratesUuid;
use Illuminate\Database\Eloquent\Model;

class Transaction extends Model
{
    use GeneratesUuid;

    /**
     * Payment types
     */
    const PAYMENT_TYPES = [
        'P' => 'payment',
        'R' => 'refund'
    ];

    /**
     * Payment status
     */
    const PAYMENT_STATUS = [
        'S' => 'success',
        'F' => 'failed'
    ];

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'type',
        'currency',
        'amount',
        'remark',
        'status',
    ];

    /**
     * Get charged amount
     */
    public function getChargedAttribute()
    {
        if ($this->status != array_search('success', self::PAYMENT_STATUS)) {
            return 0;
        }

        $amount = $this->amount;

        // Calculate children amount
        if ($childAmount = $this->children->sum('amount')) {
            $amount += $childAmount;
        }

        return $amount;
    }

    public function paymentMethod()
    {
        return $this->belongsTo(PaymentMethod::class);
    }

    public function account()
    {
        return $this->belongsTo(Account::class);
    }

    public function parent()
    {
        return $this->belongsTo(self::class, 'parent_id', 'id');
    }

    public function children()
    {
        return $this->hasMany(self::class, 'parent_id', 'id');
    }

    public function toJson($options = 0)
    {
        // Convert type and status code
        $this->type = data_get(self::PAYMENT_TYPES, $this->getAttribute('type'));
        $this->status = data_get(self::PAYMENT_STATUS, $this->getAttribute('status'));

        return parent::toJson($options); // TODO: Change the autogenerated stub
    }
}
